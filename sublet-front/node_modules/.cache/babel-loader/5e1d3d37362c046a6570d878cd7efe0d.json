{"ast":null,"code":"import axios from 'axios';\nimport authHeader from './auth-header';\nconst API_URL = 'http://localhost:8080/';\n\nclass UserService {\n  getPublicContent() {\n    // all posts\n    return axios.get(API_URL + 'posts');\n  }\n\n  findByPostslocation(loc) {\n    //get post by location\n    return axios.get(API_URL + `public/allposts?location=${loc}`);\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', {\n      headers: authHeader()\n    });\n  }\n\n  getUserPosts(id) {\n    //  get posts of user\n    console.log(called);\n    return axios.get(API_URL + `${id}/posts`, {\n      headers: authHeader()\n    });\n  }\n\n  getUserPostById(id, post_id) {\n    //  get posts of user\n    return axios.get(API_URL + `${id}` + \"/posts/\" + `${post_id}`, {\n      headers: authHeader()\n    });\n  }\n\n  createPost(id, data) {\n    //save user post\n    return axios.post(API_URL + `${id}` + \"/posts\", data, {\n      headers: authHeader()\n    });\n  }\n\n  updatePost(post_id, data) {\n    // update user post \n    return axios.put(API_URL + \"posts/\" + `${post_id}`, data, {\n      headers: authHeader()\n    });\n  }\n\n  deletePost(post_id) {\n    return axios.delete(API_URL + `posts/${post_id}`, {\n      headers: authHeader()\n    });\n  } //   getModeratorBoard() {\n  //     return axios.get(API_URL + 'mod', { headers: authHeader() });\n  //   }\n  //   getAdminBoard() {\n  //     return axios.get(API_URL + 'admin', { headers: authHeader() });\n  //   }\n\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["C:/Users/karti/Desktop/reactjs_crash/sublet-front/src/services/user-service.js"],"names":["axios","authHeader","API_URL","UserService","getPublicContent","get","findByPostslocation","loc","getUserBoard","headers","getUserPosts","id","console","log","called","getUserPostById","post_id","createPost","data","post","updatePost","put","deletePost","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,OAAO,GAAG,wBAAhB;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,gBAAgB,GAAG;AACjB;AACA,WAAOJ,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,OAApB,CAAP;AACD;;AAEDI,EAAAA,mBAAmB,CAACC,GAAD,EACnB;AAAE;AACA,WAAOP,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAI,4BAA2BK,GAAI,EAApD,CAAP;AACD;;AACDC,EAAAA,YAAY,GAAG;AACb,WAAOR,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,MAApB,EAA4B;AAAEO,MAAAA,OAAO,EAAER,UAAU;AAArB,KAA5B,CAAP;AACD;;AAEDS,EAAAA,YAAY,CAACC,EAAD,EACX;AAAE;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACA,WAAOd,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,GAAES,EAAG,QAAzB,EAAkC;AAAEF,MAAAA,OAAO,EAAER,UAAU;AAArB,KAAlC,CAAP;AACD;;AAEDc,EAAAA,eAAe,CAACJ,EAAD,EAAIK,OAAJ,EACf;AAAE;AACD,WAAOhB,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,GAAES,EAAG,EAAf,GAAiB,SAAjB,GAA4B,GAAEK,OAAQ,EAAhD,EAAoD;AAAEP,MAAAA,OAAO,EAAER,UAAU;AAArB,KAApD,CAAP;AACD;;AAGAgB,EAAAA,UAAU,CAACN,EAAD,EAAIO,IAAJ,EACV;AAAC;AACC,WAAOlB,KAAK,CAACmB,IAAN,CAAWjB,OAAO,GAAI,GAAES,EAAG,EAAhB,GAAkB,QAA7B,EAAwCO,IAAxC,EAA+C;AAAET,MAAAA,OAAO,EAAER,UAAU;AAArB,KAA/C,CAAP;AACD;;AAEDmB,EAAAA,UAAU,CAACJ,OAAD,EAASE,IAAT,EACV;AACE;AACA,WAAOlB,KAAK,CAACqB,GAAN,CAAUnB,OAAO,GAAG,QAAV,GAAoB,GAAEc,OAAQ,EAAxC,EAA2CE,IAA3C,EAAiD;AAAET,MAAAA,OAAO,EAAER,UAAU;AAArB,KAAjD,CAAP;AACD;;AAEDqB,EAAAA,UAAU,CAACN,OAAD,EACV;AACE,WAAOhB,KAAK,CAACuB,MAAN,CAAarB,OAAO,GAAI,SAAQc,OAAQ,EAAxC,EAA2C;AAAEP,MAAAA,OAAO,EAAER,UAAU;AAArB,KAA3C,CAAP;AACD,GAxCe,CA0ClB;AACA;AACA;AAEA;AACA;AACA;;;AAhDkB;;AAmDlB,eAAe,IAAIE,WAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'http://localhost:8080/';\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    // all posts\r\n    return axios.get(API_URL + 'posts');\r\n  }\r\n\r\n  findByPostslocation(loc)\r\n  { //get post by location\r\n    return axios.get(API_URL + `public/allposts?location=${loc}`);\r\n  }\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getUserPosts(id)\r\n   { //  get posts of user\r\n    console.log(called);\r\n    return axios.get(API_URL +`${id}/posts` ,{ headers: authHeader() });\r\n  }\r\n\r\n  getUserPostById(id,post_id)\r\n  { //  get posts of user\r\n   return axios.get(API_URL +`${id}`+\"/posts/\"+`${post_id}` , { headers: authHeader() });\r\n }\r\n\r\n\r\n  createPost(id,data)\r\n  {//save user post\r\n    return axios.post(API_URL + `${id}`+\"/posts\" , data , { headers: authHeader() });\r\n  }\r\n\r\n  updatePost(post_id,data)\r\n  {\r\n    // update user post \r\n    return axios.put(API_URL + \"posts/\"+`${post_id}`, data ,{ headers: authHeader() });\r\n  }\r\n\r\n  deletePost(post_id)\r\n  {\r\n    return axios.delete(API_URL + `posts/${post_id}`, { headers: authHeader() });\r\n  }\r\n\r\n//   getModeratorBoard() {\r\n//     return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n//   }\r\n\r\n//   getAdminBoard() {\r\n//     return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n//   }\r\n}\r\n\r\nexport default new UserService();"]},"metadata":{},"sourceType":"module"}