{"ast":null,"code":"import axios from 'axios';\nimport authHeader from './auth-header';\nconst API_URL = 'http://localhost:8080/';\n\nclass UserService {\n  getPublicContent() {\n    // all posts\n    return axios.get(API_URL + 'posts');\n  }\n\n  findByPostslocation(loc) {\n    //get post by location\n    return axios.get(API_URL + 'posts', loc);\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', {\n      headers: authHeader()\n    });\n  }\n\n  getUserPosts(id) {\n    //  get posts of user\n    return axios.get(API_URL + `$(id)` + '/posts');\n  }\n\n  getUserPostById(id, post_id) {\n    //  get posts of user\n    return axios.get(API_URL + `$(id)/posts/${post_id}`);\n  }\n\n  createPost(id, data) {\n    //save user post\n    return axios.post(API_URL + `${id}` + \"/posts\", data, {\n      headers: authHeader()\n    });\n  }\n\n  updatePost(postid, data) {\n    // update user post \n    return axios.put(API_URL + `posts/${post_id}`, data);\n  }\n\n  deletePost(postid) {\n    return axios.delete(API_URL + `posts/${post_id}`);\n  } //   getModeratorBoard() {\n  //     return axios.get(API_URL + 'mod', { headers: authHeader() });\n  //   }\n  //   getAdminBoard() {\n  //     return axios.get(API_URL + 'admin', { headers: authHeader() });\n  //   }\n\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["C:/Users/karti/Desktop/reactjs_crash/sublet-front/src/services/user-service.js"],"names":["axios","authHeader","API_URL","UserService","getPublicContent","get","findByPostslocation","loc","getUserBoard","headers","getUserPosts","id","getUserPostById","post_id","createPost","data","post","updatePost","postid","put","deletePost","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,MAAMC,OAAO,GAAG,wBAAhB;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,gBAAgB,GAAG;AACjB;AACA,WAAOJ,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,OAApB,CAAP;AACD;;AAEDI,EAAAA,mBAAmB,CAACC,GAAD,EACnB;AAAE;AACA,WAAOP,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,OAApB,EAA6BK,GAA7B,CAAP;AACD;;AACDC,EAAAA,YAAY,GAAG;AACb,WAAOR,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,MAApB,EAA4B;AAAEO,MAAAA,OAAO,EAAER,UAAU;AAArB,KAA5B,CAAP;AACD;;AAEDS,EAAAA,YAAY,CAACC,EAAD,EACX;AAAE;AACD,WAAOX,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,OAAV,GAAkB,QAA5B,CAAP;AACD;;AAEDU,EAAAA,eAAe,CAACD,EAAD,EAAIE,OAAJ,EACf;AAAE;AACD,WAAOb,KAAK,CAACK,GAAN,CAAUH,OAAO,GAAG,eAAcW,OAAQ,EAA1C,CAAP;AACD;;AAGAC,EAAAA,UAAU,CAACH,EAAD,EAAII,IAAJ,EACV;AAAC;AACC,WAAOf,KAAK,CAACgB,IAAN,CAAWd,OAAO,GAAI,GAAES,EAAG,EAAhB,GAAkB,QAA7B,EAAwCI,IAAxC,EAA+C;AAAEN,MAAAA,OAAO,EAAER,UAAU;AAArB,KAA/C,CAAP;AACD;;AAEDgB,EAAAA,UAAU,CAACC,MAAD,EAAQH,IAAR,EACV;AACE;AACA,WAAOf,KAAK,CAACmB,GAAN,CAAUjB,OAAO,GAAI,SAAQW,OAAQ,EAArC,EAAyCE,IAAzC,CAAP;AACD;;AAEDK,EAAAA,UAAU,CAACF,MAAD,EACV;AACE,WAAOlB,KAAK,CAACqB,MAAN,CAAanB,OAAO,GAAI,SAAQW,OAAQ,EAAxC,CAAP;AACD,GAvCe,CAyClB;AACA;AACA;AAEA;AACA;AACA;;;AA/CkB;;AAkDlB,eAAe,IAAIV,WAAJ,EAAf","sourcesContent":["import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'http://localhost:8080/';\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    // all posts\r\n    return axios.get(API_URL + 'posts');\r\n  }\r\n\r\n  findByPostslocation(loc)\r\n  { //get post by location\r\n    return axios.get(API_URL + 'posts' ,loc);\r\n  }\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getUserPosts(id)\r\n   { //  get posts of user\r\n    return axios.get(API_URL +`$(id)` +'/posts');\r\n  }\r\n\r\n  getUserPostById(id,post_id)\r\n  { //  get posts of user\r\n   return axios.get(API_URL +`$(id)/posts/${post_id}`);\r\n }\r\n\r\n\r\n  createPost(id,data)\r\n  {//save user post\r\n    return axios.post(API_URL + `${id}`+\"/posts\" , data , { headers: authHeader() });\r\n  }\r\n\r\n  updatePost(postid,data)\r\n  {\r\n    // update user post \r\n    return axios.put(API_URL + `posts/${post_id}` , data);\r\n  }\r\n\r\n  deletePost(postid)\r\n  {\r\n    return axios.delete(API_URL + `posts/${post_id}`);\r\n  }\r\n\r\n//   getModeratorBoard() {\r\n//     return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n//   }\r\n\r\n//   getAdminBoard() {\r\n//     return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n//   }\r\n}\r\n\r\nexport default new UserService();"]},"metadata":{},"sourceType":"module"}