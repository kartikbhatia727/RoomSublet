{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karti\\\\Desktop\\\\reactjs_crash\\\\sublet-front\\\\src\\\\components\\\\login-component.js\";\nimport React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this);\n  }\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.state = {\n      email: \"\",\n      password: \"\",\n      loading: false\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n    this.setState({\n      loading: true\n    });\n    this.form.validateAll();\n    const {\n      dispatch,\n      history\n    } = this.props;\n\n    if (this.checkBtn.context._errors.length === 0) {\n      dispatch(login(this.state.username, this.state.password)).then(() => {\n        history.push(\"/profile\");\n        window.location.reload();\n      }).catch(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      message\n    } = this.props;\n\n    if (isLoggedIn) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"//ssl.gstatic.com/accounts/ui/avatar_2x.png\",\n          alt: \"profile-img\",\n          className: \"profile-img-card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleLogin,\n          ref: c => {\n            this.form = c;\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              className: \"form-control\",\n              name: \"username\",\n              value: this.state.username,\n              onChange: this.onChangeUsername,\n              validations: [required]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"password\",\n              className: \"form-control\",\n              name: \"password\",\n              value: this.state.password,\n              onChange: this.onChangePassword,\n              validations: [required]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary btn-block\",\n              disabled: this.state.loading,\n              children: [this.state.loading && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"spinner-border spinner-border-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-danger\",\n              role: \"alert\",\n              children: message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n            style: {\n              display: \"none\"\n            },\n            ref: c => {\n              this.checkBtn = c;\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  const {\n    isLoggedIn\n  } = state.auth;\n  const {\n    message\n  } = state.message;\n  return {\n    isLoggedIn,\n    message\n  };\n}\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["C:/Users/karti/Desktop/reactjs_crash/sublet-front/src/components/login-component.js"],"names":["React","Component","Redirect","Form","Input","CheckButton","connect","login","required","value","Login","constructor","props","handleLogin","bind","onChangeUsername","onChangePassword","state","email","password","loading","e","setState","target","preventDefault","form","validateAll","dispatch","history","checkBtn","context","_errors","length","username","then","push","window","location","reload","catch","render","isLoggedIn","message","c","display","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { login } from \"../actions/auth\";\r\n\r\nconst required = value => {\r\n    if (!value) {\r\n      return (\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          This field is required!\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  \r\n  class Login extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.handleLogin = this.handleLogin.bind(this);\r\n      this.onChangeUsername = this.onChangeUsername.bind(this);\r\n      this.onChangePassword = this.onChangePassword.bind(this);\r\n  \r\n      this.state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        loading: false,\r\n      };\r\n    }\r\n  \r\n    onChangeUsername(e) {\r\n      this.setState({\r\n        email: e.target.value,\r\n      });\r\n    }\r\n  \r\n    onChangePassword(e) {\r\n      this.setState({\r\n        password: e.target.value,\r\n      });\r\n    }\r\n  \r\n    handleLogin(e) {\r\n      e.preventDefault();\r\n  \r\n      this.setState({\r\n        loading: true,\r\n      });\r\n  \r\n      this.form.validateAll();\r\n  \r\n      const { dispatch, history } = this.props;\r\n  \r\n      if (this.checkBtn.context._errors.length === 0) {\r\n        dispatch(login(this.state.username, this.state.password))\r\n          .then(() => {\r\n            history.push(\"/profile\");\r\n            window.location.reload();\r\n          })\r\n          .catch(() => {\r\n            this.setState({\r\n              loading: false\r\n            });\r\n          });\r\n      } else {\r\n        this.setState({\r\n          loading: false,\r\n        });\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      const { isLoggedIn, message } = this.props;\r\n  \r\n      if (isLoggedIn) {\r\n        return <Redirect to=\"/profile\" />;\r\n      }\r\n  \r\n      return (\r\n        <div className=\"col-md-12\">\r\n          <div className=\"card card-container\">\r\n            <img\r\n              src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n              alt=\"profile-img\"\r\n              className=\"profile-img-card\"\r\n            />\r\n  \r\n            <Form\r\n              onSubmit={this.handleLogin}\r\n              ref={(c) => {\r\n                this.form = c;\r\n              }}\r\n            >\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <Input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"username\"\r\n                  value={this.state.username}\r\n                  onChange={this.onChangeUsername}\r\n                  validations={[required]}\r\n                />\r\n              </div>\r\n  \r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChangePassword}\r\n                  validations={[required]}\r\n                />\r\n              </div>\r\n  \r\n              <div className=\"form-group\">\r\n                <button\r\n                  className=\"btn btn-primary btn-block\"\r\n                  disabled={this.state.loading}\r\n                >\r\n                  {this.state.loading && (\r\n                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                  )}\r\n                  <span>Login</span>\r\n                </button>\r\n              </div>\r\n  \r\n              {message && (\r\n                <div className=\"form-group\">\r\n                  <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {message}\r\n                  </div>\r\n                </div>\r\n              )}\r\n              <CheckButton\r\n                style={{ display: \"none\" }}\r\n                ref={(c) => {\r\n                  this.checkBtn = c;\r\n                }}\r\n              />\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  function mapStateToProps(state) {\r\n    const { isLoggedIn } = state.auth;\r\n    const { message } = state.message;\r\n    return {\r\n      isLoggedIn,\r\n      message\r\n    };\r\n  }\r\n  \r\n  export default connect(mapStateToProps)(Login);"]},"metadata":{},"sourceType":"module"}